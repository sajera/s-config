/*
 * s-config version 1.4.0 at 2017-08-15
 * @license MIT License Copyright (c) 2016 Serhii Perekhrest <allsajera@gmail.com> ( Sajera )    
 */
!function(){"use strict";function mapper(e){return e=String(e),this[e]?Object.assign({},this[e]):extendConfig.apply(null,Array.prototype.slice.call(arguments))}function extendConfig(e){return MAP[e]=mergeConfig.apply(null,Array.prototype.slice.call(arguments,1)),Object.assign({},MAP[e])}function readFileSync(src){var root=path.dirname(process.mainModule.filename),eval=parser[path.extname(src)];if(!eval)throw new Error("Source path must be specified correctly, with extension(.json .env)");return eval(fs.readFileSync(path.join(root,src),"utf8","r"))}function mergeConfig(){for(var e,r=arguments,t=0,n=[];t<r.length;t++)if(e=r[t],"string"==typeof e)MAP[e]?n.push(MAP[e]):n.push(readFileSync(e));else{if("[object Object]"!=Object.prototype.toString.call(e))throw new Error("Unexpected variables of config: ",e);n.push(e)}return Object.assign.apply(Object,n)}var path=require("path"),fs=require("fs"),MAP={},mapper=mapper.bind(MAP);mapper.extend=extendConfig;var parser={".json":JSON.parse.bind(JSON),".env":function(e){for(var r,t,n={},a=0,o=String(e).split("\n");a<o.length;a++)r=o[a].match(/^\s*([\w\.\-\$\@\#\*\!\~]+)\s*=+/)[1],t=o[a].match(/=\s*(.*)\s*$/)[1].trim(),r&&(n[r]=t.replace(/(^['"]|['"]$)/g,"").replace(/\s+/," "));return n}};mapper.read=readFileSync,"undefined"!=typeof process&&"[object process]"==Object.prototype.toString.call(process)&&(module.exports=mapper)}(); 